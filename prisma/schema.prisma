// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hotel {
  id            Int        @id @default(autoincrement())
  name          String
  main_image    String
  images        String[]
  description   String
  open_time     String
  close_time    String
  slug          String     @unique
  price         PRICE
  items         Items[]
  location_id   Int
  location      Location   @relation(fields: [location_id], references: [id])
  Facilities_id Int
  Facilities    Facilities @relation(fields: [Facilities_id], references: [id])
  review        Review[]
  bookings      Booking[]
  rooms         Room[]
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
}

model Items {
  id          Int      @id @default(autoincrement())
  name        String
  price       String
  description String
  Hotel_id    Int
  Hotel       Hotel    @relation(fields: [Hotel_id], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Location {
  id         Int      @id @default(autoincrement())
  name       String
  hotel      Hotel[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Facilities {
  id         Int      @id @default(autoincrement())
  name       String
  hotel      Hotel[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model User {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  city       String
  password   String
  email      String   @unique
  phone      String
  review     Review[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Review {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  text       String
  rating     Float
  Hotel_id   Int
  Hotel      Hotel  @relation(fields: [Hotel_id], references: [id])
  user_id    Int
  user       User   @relation(fields: [user_id], references: [id])
}

model Booking {
  id                Int               @id @default(autoincrement())
  number_of_people  Int
  booking_time      DateTime
  booker_email      String
  booker_phone      String
  booker_first_name String
  booker_last_name  String
  booker_request    String?
  hotel_id          Int
  hotel             Hotel             @relation(fields: [hotel_id], references: [id])
  rooms            BookingsOnRooms[]
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
}

model Room {
  id         Int               @id @default(autoincrement())
  seats      Int
  hotel_id   Int
  hotel      Hotel             @relation(fields: [hotel_id], references: [id])
  bookings   BookingsOnRooms[]
  created_at DateTime          @default(now())
  updated_at DateTime          @updatedAt
}

model BookingsOnRooms {
  booking_id Int
  booking    Booking  @relation(fields: [booking_id], references: [id])
  room_id    Int
  room       Room     @relation(fields: [room_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([booking_id, room_id])
}

enum PRICE {
  CHEAP
  REGULAR
  EXPENSIVE
}
